name: CI/CD for Airflow and Spark

on:
  pull_request:
    branches:
      - release/v1.0

jobs:
  build-and-push:
    name: Build and Push Docker Images to AWS ECR
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3


      # AWS 자격 증명 구성
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ap-northeast-2
      
      # ECR 로그인 # ECR 퍼블릭은 us-east-1리전만 동작 프라이빗변경 필요
      - name: Log in to Amazon ECR
        id: login-ecr
        run: |
          aws ecr get-login-password --region ap-northeast-2 | docker login --username AWS --password-stdin 637423378310.dkr.ecr.ap-northeast-2.amazonaws.com


      # docker images build or ECR push
      - name: Delete Existing Airflow Image
        run: |
          aws ecr batch-delete-image --repository-name job_scanner/airflow \
          --image-ids imageTag=airflow-latest || echo "No existing image to delete."

      - name: Build and Push Airflow Image
        run: |
          docker build --no-cache -t 637423378310.dkr.ecr.ap-northeast-2.amazonaws.com/job_scanner/airflow:airflow-latest -f ./airflow/Dockerfile-airflow ./airflow
          docker push 637423378310.dkr.ecr.ap-northeast-2.amazonaws.com/job_scanner/airflow:airflow-latest

      - name: Delete Existing Spark Image
        run: |
          aws ecr-public batch-delete-image --repository-name job_scanner/airflow \
          --image-ids imageTag=spark-latest || echo "No existing image to delete."

      - name: Build and Push Spark Image
        run: |
          docker build --no-cache -t 637423378310.dkr.ecr.ap-northeast-2.amazonaws.com/job_scanner/airflow:spark-latest -f ./spark/Dockerfile-spark ./spark
          docker push 637423378310.dkr.ecr.ap-northeast-2.amazonaws.com/job_scanner/airflow:spark-latest

  deploy:
    name: Deploy to EC2
    runs-on: ubuntu-latest
    needs: build-and-push

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Deploy to EC2
        run: |
          echo "${{ secrets.EC2_PRIVATE_KEY }}" > ec2-key.pem
          chmod 600 ec2-key.pem
          ssh -o StrictHostKeyChecking=no -i ec2-key.pem ubuntu@${{ secrets.EC2_PUBLIC_IP }} << 'EOF'
            docker pull 637423378310.dkr.ecr.ap-northeast-2.amazonaws.com/job_scanner/airflow:airflow-latest
            docker pull 637423378310.dkr.ecr.ap-northeast-2.amazonaws.com/job_scanner/airflow:spark-latest

            mkdir -p ~/deploy
            echo "
            version: '3.8'
            services:
              airflow:
                image: 637423378310.dkr.ecr.ap-northeast-2.amazonaws.com/job_scanner/airflow:airflow-latest
                ports:
                  - '8080:8080'

              spark-master:
                image: 637423378310.dkr.ecr.ap-northeast-2.amazonaws.com/job_scanner/airflow:spark-latest
                ports:
                  - '7077:7077'
                  - '4040:4040'
            " > ~/deploy/docker-compose.yaml

            docker-compose -f ~/deploy/docker-compose.yaml up -d

            # Remove Dangling Images
            docker image prune -f
          EOF
